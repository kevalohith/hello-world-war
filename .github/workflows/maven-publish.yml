name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Step 3: Configure Maven settings
    - name: Configure Maven settings
      run: |
        mkdir -p ~/.m2
        echo "<settings>
                <servers>
                  <server>
                    <id>hello-world-war</id>
                    <username>${{ secrets.ARTIFACTORY_USERNAME }}</username>
                    <password>${{ secrets.ARTIFACTORY_API_KEY }}</password>
                  </server>
                </servers>
              </settings>" > ~/.m2/settings.xml

    # Step 4: Build with Maven
    - name: Build with Maven
      run: mvn clean package

    # Step 5: Run SonarQube analysis
    - name: SonarQube Scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn clean verify sonar:sonar \
          -Dsonar.projectKey=kevalohith_hello-world-war \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.organization=kevalohith \
          -Dsonar.branch.name=master

    # Step 6: Wait for the SonarCloud Quality Gate and fail on failure
    - name: Wait for SonarCloud Quality Gate and Fail on Failure
      run: |
        response=$(curl -s -X GET -u "${{ secrets.SONAR_TOKEN }}:" \
          "https://sonarcloud.io/api/qualitygates/project_status?projectKey=kevalohith_hello-world-war")
        status=$(echo "$response" | jq -r .projectStatus.status)
        echo "Quality Gate status: $status"
        if [ "$status" != "OK" ]; then
          echo "Quality Gate failed. Exiting."
          exit 1
        fi
